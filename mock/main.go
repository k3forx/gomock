// Code generated by MockGen. DO NOT EDIT.
// Source: ./main.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// ApiClient is a mock of ApiClient interface.
type ApiClient struct {
	ctrl     *gomock.Controller
	recorder *ApiClientMockRecorder
}

// ApiClientMockRecorder is the mock recorder for ApiClient.
type ApiClientMockRecorder struct {
	mock *ApiClient
}

// NewApiClient creates a new mock instance.
func NewApiClient(ctrl *gomock.Controller) *ApiClient {
	mock := &ApiClient{ctrl: ctrl}
	mock.recorder = &ApiClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *ApiClient) EXPECT() *ApiClientMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *ApiClient) Request(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *ApiClientMockRecorder) Request(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*ApiClient)(nil).Request), arg0)
}
